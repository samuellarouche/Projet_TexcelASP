using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using TexcelASP.Models;

namespace TexcelASP.Controllers
{
    public class SystemeExploitationsController : Controller
    {
        private TexcelASP_SamNicEntities db = new TexcelASP_SamNicEntities();

        // GET: SystemeExploitations
        public ActionResult Index(string Rechercher = "Windows")
        {
            var Query = from OS in db.ViewSystemeExploitation
                        where OS.tag.Contains(Rechercher)
                        select OS;
            return View(Query.ToList());
            
        }

        // GET: SystemeExploitations/Details/5
        public ActionResult Details(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            SystemeExploitation systemeExploitation = db.SystemeExploitation.Find(id);
            if (systemeExploitation == null)
            {
                return HttpNotFound();
            }
            return View(systemeExploitation);
        }

        // GET: SystemeExploitations/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: SystemeExploitations/Create
        // Afin de déjouer les attaques par sur-validation, activez les propriétés spécifiques que vous voulez lier. Pour 
        // plus de détails, voir  http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "code,nom,edition,version")] SystemeExploitation systemeExploitation)
        {
            if (ModelState.IsValid)
            {
                
                db.SystemeExploitation.Add(systemeExploitation);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            return View(systemeExploitation);
        }

        // GET: SystemeExploitations/Edit/5
        public ActionResult Edit(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            SystemeExploitation systemeExploitation = db.SystemeExploitation.Find(id);
            if (systemeExploitation == null)
            {
                return HttpNotFound();
            }
            return View(systemeExploitation);
        }

        // POST: SystemeExploitations/Edit/5
        // Afin de déjouer les attaques par sur-validation, activez les propriétés spécifiques que vous voulez lier. Pour 
        // plus de détails, voir  http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "code,nom,edition,version")] SystemeExploitation systemeExploitation)
        {
            if (ModelState.IsValid)
            {
                db.Entry(systemeExploitation).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(systemeExploitation);
        }

        // GET: SystemeExploitations/Delete/5
        public ActionResult Delete(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            SystemeExploitation systemeExploitation = db.SystemeExploitation.Find(id);
            if (systemeExploitation == null)
            {
                return HttpNotFound();
            }
            return View(systemeExploitation);
        }

        // POST: SystemeExploitations/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(string id)
        {
            SystemeExploitation systemeExploitation = db.SystemeExploitation.Find(id);
            db.SystemeExploitation.Remove(systemeExploitation);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
