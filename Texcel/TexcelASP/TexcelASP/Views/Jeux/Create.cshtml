@model TexcelASP.Models.Jeu

@{
    ViewBag.Title = "Créer - Jeu";
}

@if (Session["categorieEmploi"].ToString() == "Administrateur")
{

<h2>Création</h2>

using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Jeu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.configMinimal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.configMinimal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.configMinimal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.genre, "Genre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("genre", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.theme, "Thème", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("theme", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.theme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.classification, "Classification", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("classification", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.classification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.developpeur, "Développeur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("developpeur", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.developpeur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.platforme, "Plateforme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("platforme", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.platforme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Créer" class="whiteBtn btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour", "Index", null, new { @class = "btn whiteBtn" })
</div>
}
else
{
<div style="color:red; text-align: center; font-size:large; margin-top: 15%;">
    <p>Vous n'êtes pas autorisé à accéder à cette page!</p>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
